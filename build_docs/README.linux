
This README file is a quick quide to building Firebird from the source.  It is
primary a linux build document but should be applicable to most of the unix 
platforms as well.


Regards

Mark O'Donohue 17-Apr-2001



0. PREQUEL

For Linux, I remember that I needed the ncurses package for RedHat6.2 It was
ncurses-4 something, when I loaded my Mandrake-Linux system ncurses-5.1 was 
loaded in the options I chose. [ This is no longer a requrement - the curses 
module has been removed MOD - Dec 2001]


1. GETING THE SOURCE CODE

First you need the source code.

The source code is available as a tarball from:
http://sourceforge.net/projects/firebird 

Or from our cvs repository, which you can get either as an anonymous user:

$CVSROOT=:pserver:anonymous@cvs.sourceforge.net:/cvsroot/firebird
$export CVSROOT
$cvs logon
password:   (just hit return)
$cvs -z3 checkout interbase


Or if you are a member of the Firebird project you can checkout the source using SSH and
this will allow you to commit and changes you make.

$cvs -z3 -d yourusername@cvs.sourceforge.net:/cvsroot/firebird checkout interbase


NOTE: If you use CVS to checked out the source make a backup copy of the original
      source checkout.  If you muck up the build and want to start again it
      is easiest to restore from this original backup file (This is due to a
      weakness in the way the current build process works).


2. GETTING THE BOOT BUILD KIT

Firebird needs a running Firebird system to be able to compile itself.  If
you already have Firebird/InterBase installed then you do not need to perform
this step.

Where an existing Firebird install does not yet exist Firebird can still be
build using the boot build method.  The boot build contains preparsed C files
that are used in place of those generated by an existing system.  These 
 "bootstrap" the build 

The boot build kit should be available from our ftp site, 
ftp://ftp.firebird.sourceforge.net:/pub/firebird/bootbuild or from our web site
http://sourceforge.net/projects/firebird.

[ The boot build process has been a bit patchy, so it's best to try the other
  way first, mainly it's patchy because it's a bit behind MOD Dec 2001 ]


3. EXTRACTING THE SOURCE FILES


Extract normal build source code

$tar -xzf <FirebirdSrc.tar.gz


And if the boot kit is required extract extra boot source code.

$cd interbase
$tar -xzf ../FirebirdBootKit.tar.gz



4. BUILDING THE SOURCE CODE

Configure the build system for DEV or PROD build

$./Configure.sh DEV|PROD

setup environment variables required for compilation

$source Configure_SetupEnv.sh


# Build either CLASSIC or SUPER architectures.

$make firebird            -- for classic version 
# OR
$make super_firebird      -- for super version.



5. INSTALLING THE SYSTEMS

# Install the built system into /opt/interbase.

$make classicpackages
# OR 
$make superpackages

This will build both a .rpm and a .tar.gz install package.

then install the package

rpm -Uvh FirebirdXX.Y.Y.Z-BB.rpm


6. TEST YOUR INSTALLATION

Run a quick smoke test to see if it all works ok.

$cd /opt/interbase/examples

$/opt/interbase/bin/isql
>connect employee.gdb;
>select rdb$relation_name from rdb$relations;
>exit;


(In some cases you may need to provide a password to isql)

$/opt/interbase/bin/isql
>connect employee.gdb user sysdba password <password>;
>select rdb$relation_name from rdb$relations;
>exit;


Where password will be either masterkey, or in the 
file /opt/interbase/SYSDBA.password.


Enjoy 

The Firebird Team.



TROUBLESHOOTING:

1.  Once you have mucked up a compile it is best to start again from scratch
    as there are intermediate files that need to be updated.

2.  If you want to do the install component again there is usually a 
    file of the form ".classcinstallflg" that you will need to delete
    use "ls -a" to see these files.  They are used as fake targets in 
    the makefile.
     
