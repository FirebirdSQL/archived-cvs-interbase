EXT_LEV_0:  Owned by QA_TEST, the series is being run by Clare.
History:
15-May-95:  clare:  The tests in this series show a SETUP and CLEANUP
	    script.  They don't actually need any setup or cleanup so
	    this is a doc error in the tests.  Setup/Cleanup don't exist
	    for this series and all tests appear to be self-contained.
23-Oct-95:  clare:  LIBS group found that the actual data file could
	    be created on the remote machine by providing the remote
	    path to the database WITHOUT the node name.  They created
	    a new env variable called WHERE_GDB_EXTERNAL which must
	    be set to the path-only as in the following example:

            WHERE_GDB = remote_machine
	    WHERE_GDB_EXTERNAL= /usr/gds.machine/QA  (on remote machine)

Problems:
	    (sept 8, 1998:  On NT the above setup will cause problems.
	    Run this series with WHERE_GDB_EXTERNAL set to the local disk
	    on the client machine.)
	    - Remove SETUP/CLEANUP in the comments.  (done by LIBS)
	    - Add WHERE_GDB to all tests.            (done by LIBS)
	    - Add RUN drop_gdb WHERE_GDB:<dbname> to all tests. They
	      currently use DELETE <dbname>          (done by LIBS)
            - LIBRARIES is not on any of the link lines for NT 

	    Seems to be a few problems cause by the fact that the
	    external table CREATE sometimes use something other than
	    a CHAR tag on the field.  When conversion is possible, this
	    practice will not cause a problem, but when the product
	    attempts conversion to a CHAR type and can't do it, an
	    error occurs.  We could see this as a normal error check,
	    but some of the tests that do this do not seem to understand
	    that they were not supposed to be inserting into blobs or
	    array external fields.  

EXT_REL_0_11_D: uses SMALLINT[4] which the product then believes is
	    a blob and attempts to convert into a binary type when
	    it does the insert.  A conversion error results.
EXT_REL_0_11_E: uses SMALLINT[4] but the insert uses a bad host var and
	    caused consistency chk err.  Reported as bug 7983 and fixed test.
EXT_REL_0_26_: uses SMALLINT and COMPUTED BY, but the product can
	    convert so the test passes.
EXT_REL_0_19_D: should fail w/err, but it seems to pass.  The problem
	    here is that we CAN use any legal data type in an external
	    table DDL statement--but, if we do that, the behavior will
	    not necessarily be what we expect.  These tests that are
	    checking for errors need to be a bit more detailed.
EXT_REL_0_20_D: same comment.  The test says we should get errors, but
	    the product sees nothing wrong.
EXT_REL_0_20_E: same comment (DaveS actually put a note in this test
	    saying VARCHARS are fine.)
EXT_REL_0_21_D: use a BLOB in the external table. Test not init. Could
	    be a problem.
EXT_REL_0_21_E: uses blob
EXT_REL_0_22_D: fine because we can convert to char data, but the test
	    use an int.
EXT_REL_0_24_D: may work, is not init and uses a DEFAULT value.  Uses
	    small ints as do many of the tests after this one.
EXT_REL_0_30_D: this one attempts to define an index.  Not so sure
	    if this will work as expected either since generally we
	    need to move the data to an internal table--I thought
	    externals were just to get the data to be accessed and then
	    it must be moved into the proper data types in an internal
	    table.
Tests after this do work with contraints, double percision data type
etc. and should probably be checked.

2-Oct-1995  Added WHERE_GDB to all tests and added RUN drop_gdb <dbname> to
            all tests where needed.  Also removed the setup and cleanup
            comments from the tests.
