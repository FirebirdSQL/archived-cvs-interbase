--- jrd/unix.c.32io	Wed Oct 24 11:40:01 2001
+++ jrd/unix.c	Wed Oct 24 11:38:23 2001
@@ -28,6 +28,8 @@
 #define LOCAL_SHLIB_DEFS
 #endif
 
+#define _FILE_OFFSET_BITS	64  /* Enable 64 bit IO functions */
+
 #include "../jrd/ib_stdio.h"
 #include <fcntl.h>
 #include <errno.h>
@@ -547,7 +549,7 @@
  *
  **************************************/
 struct stat	statistics;
-SLONG		length;
+long long	length;
 FIL		file;
 
 for (file = dbb->dbb_file; file->fil_next; file = file->fil_next)
@@ -594,9 +596,9 @@
  *
  **************************************/
 struct stat	statistics;
-SLONG		length;
+long long	length;
 FIL		file;
-SLONG tot_pages=0;
+ULONG tot_pages=0;
 
 /**
  **  Traverse the linked list of files and add up the number of pages
@@ -961,6 +963,7 @@
  **************************************/
 ULONG	page;
 DBB	dbb;
+long long lseek_offset;
 
 dbb = bdb->bdb_dbb;
 page = bdb->bdb_page;
@@ -982,9 +985,12 @@
 #ifdef PREAD_PWRITE
 *offset = (SLONG) (page * dbb->dbb_page_size);
 #else
+lseek_offset = page;
+lseek_offset *= dbb->dbb_page_size;
+
 THD_MUTEX_LOCK (file->fil_mutex);
 
-if ((lseek (file->fil_desc, LSEEK_OFFSET_CAST (page * dbb->dbb_page_size), 0)) == -1)
+if ((lseek (file->fil_desc, LSEEK_OFFSET_CAST lseek_offset, 0)) == -1)
     {
     THD_MUTEX_UNLOCK (file->fil_mutex);
     return (FIL) unix_error ("lseek", file, isc_io_access_err, status_vector);
--- jrd/common.h.32io	Wed Oct 24 11:40:01 2001
+++ jrd/common.h	Wed Oct 24 11:38:23 2001
@@ -114,10 +114,13 @@
 #define MMAP_SUPPORTED
 #define MAP_ANONYMOUS
 #define MAP_ANNON
-#define LSEEK_OFFSET_CAST (off_t)
 #define INTL
 #define SIGACTION_SUPPORTED
 
+#if 0
+#define POSIX_SEMAPHORES
+#endif
+
 #define MEMMOVE(from,to,length)     memmove ((void *)to, (void *)from, (size_t)length)
 #define MOVE_FAST(from,to,length)       memcpy (to, from, (int) (length))
 #define MOVE_FASTER(from,to,length)     memcpy (to, from, (int) (length))
@@ -1609,9 +1612,9 @@
 #define BUFFER_SMALL    256
 #define BUFFER_TINY     128
 
-/* The default lseek offset type */
+/* The default lseek offset type.  Changed from nothing to (off_t) to correctly support 64 bit IO */
 #ifndef LSEEK_OFFSET_CAST
-#define LSEEK_OFFSET_CAST
+#define LSEEK_OFFSET_CAST (off_t)
 #endif
 
 #ifndef DOUBLE_MULTIPLY
--- utilities/analyse.c.32	Wed Oct 24 11:42:07 2001
+++ utilities/analyse.c	Wed Oct 24 12:05:46 2001
@@ -21,6 +21,8 @@
  * Contributor(s): ______________________________________.
  */
 
+#define _FILE_OFFSET_BITS      64  /* Enable 64 bit IO functions */
+
 #ifdef VMS
 #include <types.h>
 #include "times.h"
@@ -423,11 +425,12 @@
  *	Read a database page.
  *
  **************************************/
+ long long offset = ((long long)page_number) * ((long long)page_size);
 
 if (!global_buffer)
     global_buffer = malloc (page_size);
 
-if (lseek (file, page_number * page_size, 0) == -1)
+if (lseek (file, offset, 0) == -1)
     db_error (errno);
 
 if (read (file, global_buffer, page_size) == -1)
--- utilities/dba.e.32	Wed Oct 24 11:42:07 2001
+++ utilities/dba.e	Wed Oct 24 12:05:55 2001
@@ -24,6 +24,7 @@
  *                         conditionals, as the engine now fully supports
  *                         readonly databases.
  */
+#define _FILE_OFFSET_BITS      64  /* Enable 64 bit IO functions */
 
 #include "../jrd/ib_stdio.h"
 #include <errno.h>
@@ -1466,6 +1467,7 @@
 SSHORT	length, l;
 DBA_FIL	fil;
 TDBA	tddba;
+long long offset;
 
 tddba = GET_THREAD_DATA;
 
@@ -1478,7 +1480,8 @@
     fil = fil->fil_next;
 
 page_number -= fil->fil_min_page - fil->fil_fudge;
-if (lseek (fil->fil_desc, page_number * tddba->page_size, 0) == -1)
+offset = ((long long)page_number) * ((long long)tddba->page_size);
+if (lseek (fil->fil_desc, offset, 0) == -1)
     {
 #ifdef SUPERSERVER
     CMD_UTIL_put_svc_status (tddba->dba_service_blk->svc_status,
@@ -2300,6 +2303,7 @@
 SSHORT	length, l;
 DBA_FIL	fil;
 TDBA	tddba;
+long long offset;
 
 tddba = GET_THREAD_DATA;
 
@@ -2312,7 +2316,8 @@
     fil = fil->fil_next;
 
 page_number -= fil->fil_min_page - fil->fil_fudge;
-if (lseek (fil->fil_desc, page_number * tddba->page_size, 0) == -1)
+offset = ((long long)page_number) * ((long long)tddba->page_size);
+if (lseek (fil->fil_desc, offset, 0) == -1)
     {
 #ifdef SUPERSERVER
     CMD_UTIL_put_svc_status (tddba->dba_service_blk->svc_status,
--- utilities/dba_full.e.32	Wed Oct 24 11:42:07 2001
+++ utilities/dba_full.e	Wed Oct 24 12:06:01 2001
@@ -20,6 +20,7 @@
  * All Rights Reserved.
  * Contributor(s): ______________________________________.
  */
+#define _FILE_OFFSET_BITS      64  /* Enable 64 bit IO functions */
 
 #include "../jrd/ib_stdio.h"
 #include <errno.h>
@@ -1256,6 +1257,7 @@
 SSHORT	length, l;
 FIL	fil;
 TDBA	tddba;
+long long offset;
 
 tddba = GET_THREAD_DATA;
 
@@ -1263,7 +1265,8 @@
     fil = fil->fil_next;
 
 page_number -= fil->fil_min_page - fil->fil_fudge;
-if (lseek (fil->fil_desc, page_number * tddba->page_size, 0) == -1)
+offset = ((long long)page_number) * ((long long)tddba->page_size);
+if (lseek (fil->fil_desc, offset, 0) == -1)
  db_error (errno);
 
 for (p = (SCHAR*) tddba->global_buffer, length = tddba->page_size; length > 0;)
@@ -1899,6 +1902,7 @@
 SSHORT	length, l;
 FIL	fil;
 TDBA	tddba;
+long long offset;
 
 tddba = GET_THREAD_DATA;
 
@@ -1906,7 +1910,8 @@
     fil = fil->fil_next;
 
 page_number -= fil->fil_min_page - fil->fil_fudge;
-if (lseek (fil->fil_desc, page_number * tddba->page_size, 0) == -1)
+offset = ((long long)page_number) * ((long long)tddba->page_size);
+if (lseek (fil->fil_desc, offset, 0) == -1)
     db_error (errno);
     
 for (p = (SCHAR*) tddba->global_buffer, length = tddba->page_size; length > 0;)
--- utilities/rebuild.c.32	Wed Oct 24 11:42:08 2001
+++ utilities/rebuild.c	Wed Oct 24 12:06:08 2001
@@ -20,6 +20,7 @@
  * All Rights Reserved.
  * Contributor(s): ______________________________________.
  */
+#define _FILE_OFFSET_BITS      64  /* Enable 64 bit IO functions */
 
 #include "../jrd/ib_stdio.h"
 #include <errno.h>
@@ -679,10 +680,12 @@
 SCHAR	*p;
 SSHORT	length, l;
 int	file;
+long long offset;
 
 file = rbdb->rbdb_file.fil_file;
 
-if (lseek (file, page_number * rbdb->rbdb_page_size, 0) == -1)
+offset = ((long long)page_number) * ((long long)rbdb->rbdb_page_size);
+if (lseek (file, offset, 0) == -1)
     db_error (errno);
 
 for (p = (SCHAR*) rbdb->rbdb_buffer1, length = rbdb->rbdb_page_size; length > 0;)
@@ -716,12 +719,14 @@
  **************************************/
 ULONG	page_size;
 int	fd;
+long long offset;
 
 page->pag_checksum = compute_checksum (rbdb, page);
 page_size = rbdb->rbdb_page_size;
 fd = rbdb->rbdb_file.fil_file;
 
-if (lseek (fd, page_number * page_size, 0) == -1)
+offset = ((long long)page_number) * ((long long)page_size);
+if (lseek (fd, offset, 0) == -1)
     db_error (errno);
 if (write (fd, page, page_size) == -1)
     db_error (errno);
--- utilities/sbc_print.c.32	Wed Oct 24 11:42:08 2001
+++ utilities/sbc_print.c	Wed Oct 24 12:06:17 2001
@@ -20,6 +20,7 @@
  * All Rights Reserved.
  * Contributor(s): ______________________________________.
  */
+#define _FILE_OFFSET_BITS      64  /* Enable 64 bit IO functions */
 
 #include "../jrd/ib_stdio.h"
 #include <string.h>
@@ -877,8 +878,10 @@
  **************************************/
 SCHAR	*p;
 SSHORT	length, l;
+long long offset;
 
-if (lseek (file, page_number * page_size, 0) == -1)
+offset = ((long long)page_number) * ((long long)page_size);
+if (lseek (file, offset, 0) == -1)
     db_error (errno);
 
 for (p = (SCHAR*) global_buffer, length = page_size; length > 0;)
